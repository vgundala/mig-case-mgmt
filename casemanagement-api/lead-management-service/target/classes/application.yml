spring:
  application:
    name: lead-management-service
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/lead_management
    username: lead_mgmt_user
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=10m
  
  security:
    jwt:
      secret: mySecretKey123456789012345678901234567890
      expiration: 86400000 # 24 hours in milliseconds

server:
  port: 8080
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.mig.sales.leadmanagement: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/lead-management-service.log

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/lead_management
    username: lead_mgmt_user
    password: password
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  h2:
    console:
      enabled: true

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: ${DB_URL:jdbc:postgresql://postgres:5432/lead_management}
    username: ${DB_USERNAME:lead_mgmt_user}
    password: ${DB_PASSWORD:password}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
  security:
    jwt:
      secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  logging:
    level:
      com.mig.sales.leadmanagement: INFO
      org.springframework.security: WARN
      org.hibernate.SQL: WARN

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL:jdbc:postgresql://prod-db:5432/lead_management}
    username: ${DB_USERNAME:lead_mgmt_user}
    password: ${DB_PASSWORD:password}
  jpa:
    show-sql: false
  security:
    jwt:
      secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  logging:
    level:
      com.mig.sales.leadmanagement: INFO
      org.springframework.security: WARN
      org.hibernate.SQL: WARN

